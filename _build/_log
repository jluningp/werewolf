### Starting build.
# Target: server.ml.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:server.ml, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules server.ml > server.ml.depends # cached
# Target: action.mli.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mli, file:action.mli, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules action.mli > action.mli.depends # cached
# Target: role.mli.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mli, file:role.mli, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules role.mli > role.mli.depends # cached
# Target: role.cmi, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:mli, file:role.mli, interf, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o role.cmi role.mli # cached
# Target: action.cmi, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:mli, file:action.mli, interf, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o action.cmi action.mli # cached
# Target: cards.mli.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mli, file:cards.mli, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules cards.mli > cards.mli.depends # cached
# Target: cards.cmi, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:mli, file:cards.mli, interf, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o cards.cmi cards.mli # cached
# Target: config.mli.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mli, file:config.mli, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules config.mli > config.mli.depends # cached
# Target: config.cmi, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:mli, file:config.mli, interf, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o config.cmi config.mli # cached
# Target: game.mli.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mli, file:game.mli, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules game.mli > game.mli.depends # cached
# Target: player.mli.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mli, file:player.mli, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules player.mli > player.mli.depends # cached
# Target: player.cmi, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:mli, file:player.mli, interf, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o player.cmi player.mli # cached
# Target: game.cmi, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:mli, file:game.mli, interf, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o game.cmi game.mli # cached
# Target: http.mli.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:mli, file:http.mli, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules http.mli > http.mli.depends # cached
# Target: http.cmi, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:mli, file:http.mli, interf, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o http.cmi http.mli # cached
# Target: server.cmo, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, byte, compile, debug, extension:cmo, extension:ml, file:server.cmo, file:server.ml, implem, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlc -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o server.cmo server.ml # cached
# Target: action.ml.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:action.ml, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules action.ml > action.ml.depends # cached
# Target: role.ml.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:role.ml, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules role.ml > role.ml.depends # cached
# Target: role.cmx, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:role.cmx, file:role.ml, implem, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o role.cmx role.ml # cached
# Target: action.cmx, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:action.cmx, file:action.ml, implem, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o action.cmx action.ml # cached
# Target: cards.ml.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:cards.ml, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules cards.ml > cards.ml.depends
# Target: config.ml.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:config.ml, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules config.ml > config.ml.depends # cached
# Target: config.cmx, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:config.cmx, file:config.ml, implem, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o config.cmx config.ml # cached
# Target: game.ml.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:game.ml, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules game.ml > game.ml.depends # cached
# Target: player.ml.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:player.ml, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules player.ml > player.ml.depends # cached
# Target: player.cmx, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:player.cmx, file:player.ml, implem, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o player.cmx player.ml # cached
# Target: game.cmx, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:game.cmx, file:game.ml, implem, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o game.cmx game.ml # cached
# Target: http.ml.depends, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, extension:ml, file:http.ml, ocaml, ocamldep, quiet, short_paths, thread, traverse }
ocamlfind ocamldep -package async -package str -package core -ppx 'ppx-jane -as-ppx' -modules http.ml > http.ml.depends # cached
# Target: http.cmx, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:http.cmx, file:http.ml, implem, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o http.cmx http.ml # cached
# Target: cards.cmx, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:cards.cmx, file:cards.ml, implem, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o cards.cmx cards.ml
# Target: server.cmx, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, compile, debug, extension:cmx, extension:ml, file:server.cmx, file:server.ml, implem, native, ocaml, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -c -w A-4-33-40-41-42-43-34-44 -strict-sequence -g -bin-annot -short-paths -thread -package async -package str -package core -ppx 'ppx-jane -as-ppx' -o server.cmx server.ml
# Target: server.native, tags: { package(async), package(core), package(str), ppx(ppx-jane -as-ppx), bin_annot, debug, dont_link_with, extension:native, file:server.native, link, native, ocaml, program, quiet, short_paths, thread, traverse }
ocamlfind ocamlopt -linkpkg -g -thread -package async -package str -package core role.cmx action.cmx cards.cmx config.cmx player.cmx game.cmx http.cmx server.cmx -o server.native
# Compilation successful.
